require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

describe NumbersController do

  describe "GET convert" do
    describe "with valid params" do
      before(:each) do
        get :convert, {:number => {:number => '12'}}
      end
      
      it "assigns a newly created number as @number" do
        assigns(:number).should be_a(Number)
        assigns(:number).should be_a_new(Number)
      end

      it "renders the default template" do
        response.should render_template('convert')
      end
    end

    describe "with invalid params" do
      before(:each) do
        Number.any_instance.stub(:valid?).and_return(false)
        get :convert, {:number => {}}
      end
      
      it "assigns a newly created but unsaved number as @number" do
        assigns(:number).should be_a_new(Number)
      end

      it "re-renders the 'new' template" do
        response.should render_template('new')
      end
    end
  end
end
